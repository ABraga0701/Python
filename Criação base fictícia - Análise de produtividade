#Base produtos

import csv
import random
from datetime import datetime, timedelta

# Function to generate random datetime within a range
def random_datetime(start_date, end_date):
    return start_date + timedelta(
        seconds=random.randint(0, int((end_date - start_date).total_seconds()))
    )

# Generate 500 lines of fictitious data
data = []
start_date = datetime(2023, 1, 1, 8, 0, 0)
end_date = datetime(2023, 12, 31, 17, 0, 0)

product_names = ["Widget", "Gadget", "Doodad", "Thingamajig", "Contraption", "Gizmo", "Doohickey", "Whatchamacallit", "Gubbins", "Gismo"]

for i in range(500):
    product_number = 1000 + i
    quantity = random.randint(50, 200)
    product_name = random.choice(product_names)
    
    # Entry into the warehouse with 5 to 15 days difference from manufacturing start time
    manufacturing_start_time = random_datetime(start_date, end_date)
    entry_into_warehouse = manufacturing_start_time - timedelta(days=random.randint(5, 15))
    
    # Manufacturing end time with at least 10 more days difference from manufacturing start time
    manufacturing_end_time = manufacturing_start_time + timedelta(days=random.randint(10, 20))
    
    defective_products = random.randint(0, 10)
    product_cost = round(random.uniform(10.0, 100.0), 2)
    
    # Entry and departure dates from the warehouse
    entry_date = entry_into_warehouse.strftime("%Y-%m-%d %H:%M:%S")
    departure_date = (entry_into_warehouse + timedelta(days=random.randint(1, 5))).strftime("%Y-%m-%d %H:%M:%S")
    
    # Delivery date to the customer
    delivery_date = (manufacturing_end_time + timedelta(days=random.randint(5, 15))).strftime("%Y-%m-%d %H:%M:%S")
    
    # Types of machines used in processing and manufacturing
    machines = ["Machine1", "Machine2", "Machine3", "Machine4", "Machine5"]
    machine_used = random.choice(machines)

    row = [
        product_number,
        quantity,
        product_name,
        entry_date,
        manufacturing_start_time.strftime("%Y-%m-%d %H:%M:%S"),
        manufacturing_end_time.strftime("%Y-%m-%d %H:%M:%S"),
        defective_products,
        product_cost,
        departure_date,
        delivery_date,
        machine_used,
    ]

    data.append(row)

# Write data to CSV file
with open("fictitious_database.csv", "w", newline="") as csvfile:
    csvwriter = csv.writer(csvfile)
    csvwriter.writerow([
        "ProductNumber",
        "Quantity",
        "ProductName",
        "EntryIntoWarehouse",
        "ManufacturingStartTime",
        "ManufacturingEndTime",
        "DefectiveProducts",
        "ProductCost",
        "DepartureFromWarehouse",
        "DeliveryDate",
        "MachineUsed",
    ])
    csvwriter.writerows(data)

#Base funcion√°rios

import csv
import random
from datetime import datetime, timedelta

# Function to generate unique employee ID
def generate_employee_id(existing_ids):
    new_id = random.randint(1000, 9999)
    while new_id in existing_ids:
        new_id = random.randint(1000, 9999)
    existing_ids.add(new_id)
    return new_id

# Function to generate random datetime within a range
def random_datetime(start_date, end_date):
    return start_date + timedelta(
        days=random.randint(1, (end_date - start_date).days),
        hours=random.randint(0, 23),
        minutes=random.randint(0, 59),
        seconds=random.randint(0, 59)
    )

# Generate 500 lines of fictitious data
data = []
existing_ids = set()

first_names = ["John", "Jane", "Robert", "Emily", "William", "Olivia", "Michael", "Sophia", "David", "Emma"]
last_names = ["Smith", "Johnson", "Williams", "Jones", "Brown", "Davis", "Miller", "Wilson", "Moore", "Taylor"]

positions = ["Manager", "Supervisor", "Engineer", "Technician", "Intern", "Apprentice"]

start_date = datetime(2020, 1, 1)
end_date = datetime(2023, 12, 31)

for i in range(500):
    employee_id = generate_employee_id(existing_ids)
    first_name = random.choice(first_names)
    last_name = random.choice(last_names)
    admission_date = random_datetime(start_date, end_date)
    position = random.choice(positions)

    row = [
        employee_id,
        first_name,
        last_name,
        admission_date.strftime("%Y-%m-%d %H:%M:%S"),
        position
    ]

    data.append(row)

# Write data to CSV file
with open("employee_database.csv", "w", newline="") as csvfile:
    csvwriter = csv.writer(csvfile)
    csvwriter.writerow([
        "EmployeeID",
        "FirstName",
        "LastName",
        "AdmissionDate",
        "Position"
    ])
    csvwriter.writerows(data)


